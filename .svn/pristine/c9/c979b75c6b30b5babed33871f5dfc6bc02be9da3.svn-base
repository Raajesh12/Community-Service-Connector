package com.example.raajesharunachalam.communityserviceconnector;

import android.content.Intent;
import android.net.Uri;
import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;

import com.firebase.ui.auth.AuthUI;
import com.squareup.picasso.Picasso;

import java.util.ArrayList;

import android.content.ContentResolver;
import android.content.ContentValues;
import android.content.Intent;
import android.database.Cursor;
import android.net.Uri;
import android.provider.CalendarContract;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.util.Log;
import android.widget.ImageView;
import android.widget.TextView;

import com.squareup.picasso.Picasso;

import java.util.ArrayList;
import java.util.Calendar;

/**
 * The CalendarActivity which displays a list of Event objects and allows users to add them to the
 * calendars on their devices
 *
 * @author arnchlm2
 */
public class CalendarActivity extends AppCompatActivity {

    private static final int CALENDAR_ID = 1;
    private static final int IMAGE_DIMENSION = 40;

    double latitude;
    double longitude;
    ImageView userIcon;
    String displayName;
    TextView username;
    RecyclerView eventsRecyclerView;
    ImageView plusButton;

    /**
     * Sets up the recyclerView and its associated data Adapter essential for the app to perform
     * properly.
     *
     * @param savedInstanceState A previous instance of this Activity and associated data.
     */
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_calendar);

        userIcon = (ImageView) findViewById(R.id.calendar_user_icon);
        username = (TextView) findViewById(R.id.calendar_username);

        Intent intent = getIntent();
        if (intent.hasExtra(getString(R.string.display_name_key)) && intent.hasExtra(getString(R.string.display_photo_key)) &&
                intent.hasExtra(getString(R.string.latitude_key)) && intent.hasExtra(getString(R.string.longitude_key))) {
            latitude = intent.getDoubleExtra(getString(R.string.latitude_key), 0.0);
            displayName = intent.getStringExtra(getString(R.string.display_name_key));
            username.setText("User: " + displayName);

            Uri displayIcon = (Uri) intent.getParcelableExtra(getString(R.string.display_photo_key));
            Picasso.with(this).load(displayIcon).resize(IMAGE_DIMENSION, IMAGE_DIMENSION).into(userIcon);
        }

        eventsRecyclerView = (RecyclerView) findViewById(R.id.events_recycler_view);

        //Sets the appropriate LinearLayout style for the RecyclerView
        LinearLayoutManager layoutManager = new LinearLayoutManager(this, LinearLayoutManager.VERTICAL, false);
        eventsRecyclerView.setLayoutManager(layoutManager);

        ArrayList<Event> events = Event.createDefaultEvents();
        EventAdapter adapter = new EventAdapter(this, events, CALENDAR_ID, displayName);
        eventsRecyclerView.setAdapter(adapter);

        plusButton = (ImageView) findViewById(R.id.plus_button);
        Picasso.with(this).load("https://lh3.googleusercontent.com/5aI-VClrZ3nTgDzjd7MKeX1R_vHC_Ks" +
                "8nJksNADBJraNaXfeph9lT1cDKWcyk9lO_LY=w300").resize(70, 80).into(plusButton);
        plusButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent = new Intent(CalendarActivity.this, CreateEventActivity.class);
                intent.putExtra(getString(R.string.latitude_key), latitude);
                intent.putExtra(getString(R.string.longitude_key), longitude);
                startActivity(intent);
            }
        });
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        MenuInflater inflater = getMenuInflater();
        inflater.inflate(R.menu.constant_menu, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        if(item.getItemId() == R.id.menu_sign_out_button){
            AuthUI.getInstance().signOut(this);
            Intent intent = new Intent(CalendarActivity.this, AuthActivity.class);
            intent.putExtra(getString(R.string.sign_out_key), "Signed Out");
            startActivity(intent);
            return true;
        }
        else{
            return super.onOptionsItemSelected(item);
        }
    }
}
